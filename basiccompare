{% macro compare_tables(model, other_model, exclude_columns=[]) %}
  {% set columns = adapter.get_columns_in_relation(model) %}
  {% set other_columns = adapter.get_columns_in_relation(other_model) %}
  {% set comparison_columns = [] %}

  {% for column in columns %}
    {% if column.name not in exclude_columns %}
      {% for other_column in other_columns %}
        {% if other_column.name == column.name %}
          {% set _ = comparison_columns.append(column) %}
        {% endif %}
      {% endfor %}
    {% endif %}
  {% endfor %}

  {% if comparison_columns|length > 0 %}
    {% set select_columns_list = [] %}
    {% for column in comparison_columns %}
      {% set _ = select_columns_list.append(column.name) %}
    {% endfor %}
    {% set select_columns = ', '.join(select_columns_list) %}
    
    {% set sql %}
      WITH
        model_data AS (
          SELECT {{ select_columns }} FROM {{ model }}
        ),
        other_model_data AS (
          SELECT {{ select_columns }} FROM {{ other_model }}
        ),
        intersection AS (
          SELECT * FROM model_data
          INTERSECT DISTINCT
          SELECT * FROM other_model_data
        ),
        non_matching_rows AS (
          (SELECT * FROM model_data EXCEPT DISTINCT SELECT * FROM other_model_data)
          UNION ALL
          (SELECT * FROM other_model_data EXCEPT DISTINCT SELECT * FROM model_data)
        ),
        comparison_result AS (
          SELECT COUNT(*) AS matching_row_count FROM intersection
          UNION ALL
          SELECT COUNT(*) AS non_matching_row_count FROM non_matching_rows
        )
      SELECT
        (SELECT matching_row_count FROM comparison_result LIMIT 1) AS matching_row_count,
        (SELECT non_matching_row_count FROM comparison_result OFFSET 1) AS non_matching_row_count
      FROM comparison_result
      LIMIT 1
    {% endset %}

    {{ return(sql) }}
  {% else %}
    {{ exceptions.raise_compiler_error("No columns to compare. Either the tables have no common columns or all columns are in the 'exclude_columns' list.") }}
  {% endif %}
{% endmacro %}

version: 2

models:
  - name: Product_RCB_staging
    tests:
      - name: compare_tables
        threshold:
          non_matching_rows: 0
        args:
          other_model: ref('Product_ACBS_staging')
          exclude_columns: ['column_to_exclude_1', 'column_to_exclude_2']

  - name: Product_ACBS_staging
    tests:
      - name: compare_tables
        threshold:
          non_matching_rows: 0
        args:
          other_model: ref('Product_RCB_staging')
          exclude_columns: ['column_to_exclude_1', 'column_to_exclude_2']


dbt
test
 --models Product_RCB_staging+Product_ACBS_staging
